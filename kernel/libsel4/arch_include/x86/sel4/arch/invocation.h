/* @LICENSE(NICTA) */

/* This header was generated by kernel/tools/invocation_header_gen.py.
 *
 * To add an invocation call number, edit libsel4/include/interfaces/sel4.xml.
 *
 */
#ifndef __LIBSEL4_ARCH_INVOCATION_H
#define __LIBSEL4_ARCH_INVOCATION_H

enum arch_invocation_label {
    IA32PageDirectoryMap = nInvocationLabels + 0,
    IA32PageDirectoryUnmap = nInvocationLabels + 1,
    IA32PageTableMap = nInvocationLabels + 2,
    IA32PageTableUnmap = nInvocationLabels + 3,
    IA32IOPageTableMap = nInvocationLabels + 4,
    IA32IOPageTableUnmap = nInvocationLabels + 5,
    IA32PageMap = nInvocationLabels + 6,
    IA32PageUnmap = nInvocationLabels + 7,
    IA32PageMapIO = nInvocationLabels + 8,
    IA32PageGetAddress = nInvocationLabels + 9,
    IA32IOPortIn8 = nInvocationLabels + 10,
    IA32IOPortIn16 = nInvocationLabels + 11,
    IA32IOPortIn32 = nInvocationLabels + 12,
    IA32IOPortOut8 = nInvocationLabels + 13,
    IA32IOPortOut16 = nInvocationLabels + 14,
    IA32IOPortOut32 = nInvocationLabels + 15,
    IA32VCPUSetTCB = nInvocationLabels + 16,
    IA32VCPUReadVMCS = nInvocationLabels + 17,
    IA32VCPUWriteVMCS = nInvocationLabels + 18,
    IA32VCPUSetIOPort = nInvocationLabels + 19,
    IA32VCPUSetIOPortMask = nInvocationLabels + 20,
    IA32VCPUWriteRegisters = nInvocationLabels + 21,
    IA32EPTPageDirectoryMap = nInvocationLabels + 22,
    IA32EPTPageDirectoryUnmap = nInvocationLabels + 23,
    IA32EPTPageTableMap = nInvocationLabels + 24,
    IA32EPTPageTableUnmap = nInvocationLabels + 25,
    IA32IPISend = nInvocationLabels + 26,
    nArchInvocationLabels
};

#endif /* __LIBSEL4_ARCH_INVOCATION_H */
